//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.0
//     from Assets/Ble/Game/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace Taijj.SampleCode
{
    public partial class @InputActions: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @InputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Hero"",
            ""id"": ""df19f3e3-e6b4-4107-927e-79682a40612f"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""daf53286-408a-4de2-9ac8-73bd8f226dae"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""63430817-6cb2-42a8-bfa6-2dad53a95192"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShootFire"",
                    ""type"": ""Button"",
                    ""id"": ""293d7109-0bc1-42e6-9e8d-18189df65c9d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShootIce"",
                    ""type"": ""Button"",
                    ""id"": ""e5086637-dbc9-47b1-89fc-ac44f27339b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BreathFire"",
                    ""type"": ""Button"",
                    ""id"": ""c68f0639-8f0a-44ae-b823-42b9f6a07e40"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BreathIce"",
                    ""type"": ""Button"",
                    ""id"": ""c4ebdbe9-f91d-4029-b923-5ffd43039622"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stand"",
                    ""type"": ""Button"",
                    ""id"": ""c0e0ffd4-7526-44a8-bb16-ca1fa93c3e1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Special"",
                    ""type"": ""Button"",
                    ""id"": ""53b12afa-f9c9-4ef5-88a4-60085af78457"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectSpecial"",
                    ""type"": ""Value"",
                    ""id"": ""358a1c1b-078b-4339-a9e8-1a25c883d03a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""Button"",
                    ""id"": ""26582f8b-e7f1-45e0-8562-bbcb00343db2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""754461f8-487b-43cc-ac69-746bb8344b55"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Cheat"",
                    ""type"": ""Value"",
                    ""id"": ""f9cabd9c-f711-487f-a743-818d03809735"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""LeftStick"",
                    ""id"": ""03b2bdd8-3431-4b10-b18c-455384eb842a"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5e6d0492-7f44-4c73-9c0d-74978cc51e0a"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6d1b84a7-875c-4ae8-aff1-472280c47488"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1b4ebe00-9a15-4eca-b316-c22306a17ada"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""108fe2d0-75ac-407f-b572-5d77d9f7d933"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ArrowKeys"",
                    ""id"": ""8cbe2215-84b0-4db8-a5a0-1955a02403cd"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""808b4f3a-fa2e-49ff-9391-c0f46386985f"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""9129cc4d-6757-4328-b5ba-de74d3a36337"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""09acb4e8-51ee-426e-8104-50ad5af81ba9"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""06e8d14a-7f20-4447-8250-c9f210a7e739"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""816f29b2-0f35-4c92-88a5-266f875231b4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ce8d8b0-e70d-4145-8450-5493ce6ecba8"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f2a56143-51ed-4e63-bb2f-17f179901a05"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93868c9f-6feb-4a70-8749-e798e4c59855"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2ce4d9c3-7439-4961-bd35-91c8f3a27ec6"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootIce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c3316cb-cc06-4158-b26c-c8df9426e81c"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ShootIce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""515877b5-475e-41e6-aee5-2c5ed00208c0"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BreathFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""54bcd659-4283-409a-9c99-041dcac7e1b4"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BreathFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a8d6bac8-3318-4afa-a7b4-4326ae4c92d0"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BreathIce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9cb703c-0e59-4789-afb0-130ca9fef547"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BreathIce"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7989916e-763c-4077-8d00-609ab0cdb09b"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e609fdd5-ec8d-40d2-b20b-b4c816ebc20f"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Special"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Dpad"",
                    ""id"": ""7c6ba73e-a706-4b37-86bc-52a0e997c776"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSpecial"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9f6540fc-2eff-4f10-b34c-76c57bf5fdfd"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSpecial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7e939b27-9f2b-4037-a073-9abfd2129450"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSpecial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""db024392-8798-4ee7-aa0e-0176eab5a71f"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSpecial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""aa55b740-3b4f-48b8-b13c-9e0edd956b92"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSpecial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Wasd"",
                    ""id"": ""9e9ae8c7-3e6b-41df-8ddd-1e42e676a332"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSpecial"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bb86ae58-ba3f-47a1-b16b-da2fa62f8434"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSpecial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d4f51917-fa54-4938-84e4-b6317706336a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSpecial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f46616fd-4180-4b45-a918-129bde9bcba0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSpecial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b35e7847-c557-485d-89b3-b9a211f25f18"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSpecial"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8013c390-d979-41bd-9cce-7e98e2372d23"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""99ee9a3c-6b59-4b63-9339-02317c8c65e8"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""RightStick"",
                    ""id"": ""3ed952d7-4868-4f9c-a7ed-cf1f0c241317"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c9a35d68-85b3-4efc-bbdb-7aa88ba158e9"",
                    ""path"": ""<Gamepad>/rightStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2fedaef0-5f86-4eb9-bcab-a3fee67a4141"",
                    ""path"": ""<Gamepad>/rightStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""bc4aa9df-5426-497a-b3aa-9e7c6eb297e2"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""26bcab99-452b-4c18-9c32-5bf7392017a6"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""0df98eea-69ea-4028-8ee4-5f48977f6606"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83d3c644-870c-4c7a-aef5-20ab3c7bfa6e"",
                    ""path"": ""<Keyboard>/f2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d3648c2d-85c5-4453-9285-a1fca7a283a8"",
                    ""path"": ""<Keyboard>/f3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cc306d2c-b1d6-40ce-ab79-3be932fb8b33"",
                    ""path"": ""<Keyboard>/f4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5b6bf59-1f22-4bf4-b30e-1ee89042e874"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5ca0413c-8af1-4ab0-9529-f2f5f44aebc9"",
                    ""path"": ""<Keyboard>/f6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9e4d6bec-1410-4282-a3fd-18e5f39c7295"",
                    ""path"": ""<Keyboard>/f7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""279744f5-25fb-4193-a03a-53fbd0e9ee2a"",
                    ""path"": ""<Keyboard>/f8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""349724ba-8815-4c6b-980a-ca31d28beaec"",
                    ""path"": ""<Keyboard>/f9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b255f58f-559c-48d9-8670-b9b4f4ee5073"",
                    ""path"": ""<Keyboard>/f10"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""319da76e-1310-42ed-a9db-62f4ea32a173"",
                    ""path"": ""<Keyboard>/f11"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""70ce63bc-ee7c-47da-a1fd-ea86c85b9142"",
                    ""path"": ""<Keyboard>/f12"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cheat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbbc0798-5657-4cbe-a28d-a7208efa5570"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stand"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""29dc5b84-58e0-4deb-9b1d-caee448f6cae"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stand"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c4dc83ef-e234-4fbf-b598-45189ab5a92b"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Stand"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Ui"",
            ""id"": ""86ce067b-be35-4b4e-880f-9dee7af0773f"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""19b0f06f-7b4e-44a4-91c4-74e176811b68"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Submit"",
                    ""type"": ""Button"",
                    ""id"": ""145217dc-8d5d-4e48-b40d-c86fd052e499"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""f60b0ba7-08a6-497d-8fd2-34c69e445bc7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Close"",
                    ""type"": ""Button"",
                    ""id"": ""524c2281-01f3-4ee6-8bd8-96997106d92d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""LeftStick"",
                    ""id"": ""b01988d3-9ad2-4f08-beb1-02258917e804"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ca9365cf-adaa-4fe4-a0d3-04e60d6eb767"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e0fd4a75-4f14-4f28-afff-11521147965b"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5f36deb1-3886-472b-bf05-05e5f016c450"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""101cc02a-59e0-4e61-bc19-906bc45d5503"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""ArrowKeys"",
                    ""id"": ""9b24473c-c310-4361-94ac-3cbc7b081a00"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""924f3d56-2b9e-4872-949a-8e4832cb2f41"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6cc717f7-7f65-4e9f-a1a1-b35ef1f06ff9"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5e19b73f-26dc-4e97-9382-e1a55496e488"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""04f413a0-1184-461d-a167-8cc0465eb72e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1541ecc7-d406-49e3-a387-3bcd697cfbe9"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""caf2dd22-b11d-4671-a61d-4c8fa3f3ede3"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1838e26b-95f9-4976-bac9-b745f70be91e"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""279b11ee-8a39-489f-b43b-7648fdde0a24"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Submit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59301e27-13da-4a30-b903-e30945cf8cca"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Close"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Presentation"",
            ""id"": ""418af6f1-6176-4049-92e1-96245a549c98"",
            ""actions"": [
                {
                    ""name"": ""Next"",
                    ""type"": ""Button"",
                    ""id"": ""293019d5-8d53-426c-bb80-4dd9f3e205e9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skip"",
                    ""type"": ""Button"",
                    ""id"": ""b292754e-cd79-45b9-81b6-db73ec87c012"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""891bc243-0ad4-4198-ac8a-f770a1a8f392"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ac9da93-9a32-4658-b20e-50e0a45cfa9f"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Next"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c220beb-0038-4d00-8e02-7f8c0ae2f32c"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""894db6af-da99-4dd7-85af-bce5347f39c5"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
            // Hero
            m_Hero = asset.FindActionMap("Hero", throwIfNotFound: true);
            m_Hero_Move = m_Hero.FindAction("Move", throwIfNotFound: true);
            m_Hero_Jump = m_Hero.FindAction("Jump", throwIfNotFound: true);
            m_Hero_ShootFire = m_Hero.FindAction("ShootFire", throwIfNotFound: true);
            m_Hero_ShootIce = m_Hero.FindAction("ShootIce", throwIfNotFound: true);
            m_Hero_BreathFire = m_Hero.FindAction("BreathFire", throwIfNotFound: true);
            m_Hero_BreathIce = m_Hero.FindAction("BreathIce", throwIfNotFound: true);
            m_Hero_Stand = m_Hero.FindAction("Stand", throwIfNotFound: true);
            m_Hero_Special = m_Hero.FindAction("Special", throwIfNotFound: true);
            m_Hero_SelectSpecial = m_Hero.FindAction("SelectSpecial", throwIfNotFound: true);
            m_Hero_Pause = m_Hero.FindAction("Pause", throwIfNotFound: true);
            m_Hero_Look = m_Hero.FindAction("Look", throwIfNotFound: true);
            m_Hero_Cheat = m_Hero.FindAction("Cheat", throwIfNotFound: true);
            // Ui
            m_Ui = asset.FindActionMap("Ui", throwIfNotFound: true);
            m_Ui_Move = m_Ui.FindAction("Move", throwIfNotFound: true);
            m_Ui_Submit = m_Ui.FindAction("Submit", throwIfNotFound: true);
            m_Ui_Cancel = m_Ui.FindAction("Cancel", throwIfNotFound: true);
            m_Ui_Close = m_Ui.FindAction("Close", throwIfNotFound: true);
            // Presentation
            m_Presentation = asset.FindActionMap("Presentation", throwIfNotFound: true);
            m_Presentation_Next = m_Presentation.FindAction("Next", throwIfNotFound: true);
            m_Presentation_Skip = m_Presentation.FindAction("Skip", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Hero
        private readonly InputActionMap m_Hero;
        private List<IHeroActions> m_HeroActionsCallbackInterfaces = new List<IHeroActions>();
        private readonly InputAction m_Hero_Move;
        private readonly InputAction m_Hero_Jump;
        private readonly InputAction m_Hero_ShootFire;
        private readonly InputAction m_Hero_ShootIce;
        private readonly InputAction m_Hero_BreathFire;
        private readonly InputAction m_Hero_BreathIce;
        private readonly InputAction m_Hero_Stand;
        private readonly InputAction m_Hero_Special;
        private readonly InputAction m_Hero_SelectSpecial;
        private readonly InputAction m_Hero_Pause;
        private readonly InputAction m_Hero_Look;
        private readonly InputAction m_Hero_Cheat;
        public struct HeroActions
        {
            private @InputActions m_Wrapper;
            public HeroActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Hero_Move;
            public InputAction @Jump => m_Wrapper.m_Hero_Jump;
            public InputAction @ShootFire => m_Wrapper.m_Hero_ShootFire;
            public InputAction @ShootIce => m_Wrapper.m_Hero_ShootIce;
            public InputAction @BreathFire => m_Wrapper.m_Hero_BreathFire;
            public InputAction @BreathIce => m_Wrapper.m_Hero_BreathIce;
            public InputAction @Stand => m_Wrapper.m_Hero_Stand;
            public InputAction @Special => m_Wrapper.m_Hero_Special;
            public InputAction @SelectSpecial => m_Wrapper.m_Hero_SelectSpecial;
            public InputAction @Pause => m_Wrapper.m_Hero_Pause;
            public InputAction @Look => m_Wrapper.m_Hero_Look;
            public InputAction @Cheat => m_Wrapper.m_Hero_Cheat;
            public InputActionMap Get() { return m_Wrapper.m_Hero; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(HeroActions set) { return set.Get(); }
            public void AddCallbacks(IHeroActions instance)
            {
                if (instance == null || m_Wrapper.m_HeroActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_HeroActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @ShootFire.started += instance.OnShootFire;
                @ShootFire.performed += instance.OnShootFire;
                @ShootFire.canceled += instance.OnShootFire;
                @ShootIce.started += instance.OnShootIce;
                @ShootIce.performed += instance.OnShootIce;
                @ShootIce.canceled += instance.OnShootIce;
                @BreathFire.started += instance.OnBreathFire;
                @BreathFire.performed += instance.OnBreathFire;
                @BreathFire.canceled += instance.OnBreathFire;
                @BreathIce.started += instance.OnBreathIce;
                @BreathIce.performed += instance.OnBreathIce;
                @BreathIce.canceled += instance.OnBreathIce;
                @Stand.started += instance.OnStand;
                @Stand.performed += instance.OnStand;
                @Stand.canceled += instance.OnStand;
                @Special.started += instance.OnSpecial;
                @Special.performed += instance.OnSpecial;
                @Special.canceled += instance.OnSpecial;
                @SelectSpecial.started += instance.OnSelectSpecial;
                @SelectSpecial.performed += instance.OnSelectSpecial;
                @SelectSpecial.canceled += instance.OnSelectSpecial;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Cheat.started += instance.OnCheat;
                @Cheat.performed += instance.OnCheat;
                @Cheat.canceled += instance.OnCheat;
            }

            private void UnregisterCallbacks(IHeroActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @Jump.started -= instance.OnJump;
                @Jump.performed -= instance.OnJump;
                @Jump.canceled -= instance.OnJump;
                @ShootFire.started -= instance.OnShootFire;
                @ShootFire.performed -= instance.OnShootFire;
                @ShootFire.canceled -= instance.OnShootFire;
                @ShootIce.started -= instance.OnShootIce;
                @ShootIce.performed -= instance.OnShootIce;
                @ShootIce.canceled -= instance.OnShootIce;
                @BreathFire.started -= instance.OnBreathFire;
                @BreathFire.performed -= instance.OnBreathFire;
                @BreathFire.canceled -= instance.OnBreathFire;
                @BreathIce.started -= instance.OnBreathIce;
                @BreathIce.performed -= instance.OnBreathIce;
                @BreathIce.canceled -= instance.OnBreathIce;
                @Stand.started -= instance.OnStand;
                @Stand.performed -= instance.OnStand;
                @Stand.canceled -= instance.OnStand;
                @Special.started -= instance.OnSpecial;
                @Special.performed -= instance.OnSpecial;
                @Special.canceled -= instance.OnSpecial;
                @SelectSpecial.started -= instance.OnSelectSpecial;
                @SelectSpecial.performed -= instance.OnSelectSpecial;
                @SelectSpecial.canceled -= instance.OnSelectSpecial;
                @Pause.started -= instance.OnPause;
                @Pause.performed -= instance.OnPause;
                @Pause.canceled -= instance.OnPause;
                @Look.started -= instance.OnLook;
                @Look.performed -= instance.OnLook;
                @Look.canceled -= instance.OnLook;
                @Cheat.started -= instance.OnCheat;
                @Cheat.performed -= instance.OnCheat;
                @Cheat.canceled -= instance.OnCheat;
            }

            public void RemoveCallbacks(IHeroActions instance)
            {
                if (m_Wrapper.m_HeroActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IHeroActions instance)
            {
                foreach (var item in m_Wrapper.m_HeroActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_HeroActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public HeroActions @Hero => new HeroActions(this);

        // Ui
        private readonly InputActionMap m_Ui;
        private List<IUiActions> m_UiActionsCallbackInterfaces = new List<IUiActions>();
        private readonly InputAction m_Ui_Move;
        private readonly InputAction m_Ui_Submit;
        private readonly InputAction m_Ui_Cancel;
        private readonly InputAction m_Ui_Close;
        public struct UiActions
        {
            private @InputActions m_Wrapper;
            public UiActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Move => m_Wrapper.m_Ui_Move;
            public InputAction @Submit => m_Wrapper.m_Ui_Submit;
            public InputAction @Cancel => m_Wrapper.m_Ui_Cancel;
            public InputAction @Close => m_Wrapper.m_Ui_Close;
            public InputActionMap Get() { return m_Wrapper.m_Ui; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(UiActions set) { return set.Get(); }
            public void AddCallbacks(IUiActions instance)
            {
                if (instance == null || m_Wrapper.m_UiActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_UiActionsCallbackInterfaces.Add(instance);
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Submit.started += instance.OnSubmit;
                @Submit.performed += instance.OnSubmit;
                @Submit.canceled += instance.OnSubmit;
                @Cancel.started += instance.OnCancel;
                @Cancel.performed += instance.OnCancel;
                @Cancel.canceled += instance.OnCancel;
                @Close.started += instance.OnClose;
                @Close.performed += instance.OnClose;
                @Close.canceled += instance.OnClose;
            }

            private void UnregisterCallbacks(IUiActions instance)
            {
                @Move.started -= instance.OnMove;
                @Move.performed -= instance.OnMove;
                @Move.canceled -= instance.OnMove;
                @Submit.started -= instance.OnSubmit;
                @Submit.performed -= instance.OnSubmit;
                @Submit.canceled -= instance.OnSubmit;
                @Cancel.started -= instance.OnCancel;
                @Cancel.performed -= instance.OnCancel;
                @Cancel.canceled -= instance.OnCancel;
                @Close.started -= instance.OnClose;
                @Close.performed -= instance.OnClose;
                @Close.canceled -= instance.OnClose;
            }

            public void RemoveCallbacks(IUiActions instance)
            {
                if (m_Wrapper.m_UiActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IUiActions instance)
            {
                foreach (var item in m_Wrapper.m_UiActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_UiActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public UiActions @Ui => new UiActions(this);

        // Presentation
        private readonly InputActionMap m_Presentation;
        private List<IPresentationActions> m_PresentationActionsCallbackInterfaces = new List<IPresentationActions>();
        private readonly InputAction m_Presentation_Next;
        private readonly InputAction m_Presentation_Skip;
        public struct PresentationActions
        {
            private @InputActions m_Wrapper;
            public PresentationActions(@InputActions wrapper) { m_Wrapper = wrapper; }
            public InputAction @Next => m_Wrapper.m_Presentation_Next;
            public InputAction @Skip => m_Wrapper.m_Presentation_Skip;
            public InputActionMap Get() { return m_Wrapper.m_Presentation; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(PresentationActions set) { return set.Get(); }
            public void AddCallbacks(IPresentationActions instance)
            {
                if (instance == null || m_Wrapper.m_PresentationActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_PresentationActionsCallbackInterfaces.Add(instance);
                @Next.started += instance.OnNext;
                @Next.performed += instance.OnNext;
                @Next.canceled += instance.OnNext;
                @Skip.started += instance.OnSkip;
                @Skip.performed += instance.OnSkip;
                @Skip.canceled += instance.OnSkip;
            }

            private void UnregisterCallbacks(IPresentationActions instance)
            {
                @Next.started -= instance.OnNext;
                @Next.performed -= instance.OnNext;
                @Next.canceled -= instance.OnNext;
                @Skip.started -= instance.OnSkip;
                @Skip.performed -= instance.OnSkip;
                @Skip.canceled -= instance.OnSkip;
            }

            public void RemoveCallbacks(IPresentationActions instance)
            {
                if (m_Wrapper.m_PresentationActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IPresentationActions instance)
            {
                foreach (var item in m_Wrapper.m_PresentationActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_PresentationActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public PresentationActions @Presentation => new PresentationActions(this);
        public interface IHeroActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnJump(InputAction.CallbackContext context);
            void OnShootFire(InputAction.CallbackContext context);
            void OnShootIce(InputAction.CallbackContext context);
            void OnBreathFire(InputAction.CallbackContext context);
            void OnBreathIce(InputAction.CallbackContext context);
            void OnStand(InputAction.CallbackContext context);
            void OnSpecial(InputAction.CallbackContext context);
            void OnSelectSpecial(InputAction.CallbackContext context);
            void OnPause(InputAction.CallbackContext context);
            void OnLook(InputAction.CallbackContext context);
            void OnCheat(InputAction.CallbackContext context);
        }
        public interface IUiActions
        {
            void OnMove(InputAction.CallbackContext context);
            void OnSubmit(InputAction.CallbackContext context);
            void OnCancel(InputAction.CallbackContext context);
            void OnClose(InputAction.CallbackContext context);
        }
        public interface IPresentationActions
        {
            void OnNext(InputAction.CallbackContext context);
            void OnSkip(InputAction.CallbackContext context);
        }
    }
}
